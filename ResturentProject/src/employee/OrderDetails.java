/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package employee;
import database.RestaurantDatabase;
import java.util.*;

import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.JScrollPane;
import java.util.Map;
import java.awt.Color;
import javax.swing.table.JTableHeader;
import javax.swing.*;


/**
 *
 * @author chatw
 */
public class OrderDetails extends javax.swing.JFrame {
    
    private JTable Orders;
    private DefaultTableModel OrdersModel;
    /**
     * Creates new form OrderDetails
     */
    
    // Creates a table to save the order data.
 public OrderDetails() {
    initComponents();
    setupTable();
    //resetTable();
}
private void setupTable() {
    // Initialize the table model
    DefaultTableModel OrdersModel = new DefaultTableModel(
        new Object [][] {
            {null,null, null, null, null, null, null, null}
        },
        new String [] {
            "Orderd item ID","Order ID", "Table ID", "Item", "Quantity", "Extra", "Orderd time", "Item state"
        }
    ) {
        @Override
        public boolean isCellEditable(int row, int column) {
            // This will make the cells uneditable
            return false;
        }
    };

    // Initialize the table
    JTable Orders = new JTable(OrdersModel);

    // Change the color of the table
    Orders.setBackground(new Color(255, 255, 255)); // This changes the background color to a custom RGB color
    Orders.setForeground(Color.BLACK); // This changes the text color

    // Change the color of the table header
    JTableHeader header = Orders.getTableHeader();
    header.setBackground(new Color(255, 255, 255)); // This changes the background color of the header to a custom RGB color
    header.setForeground(Color.BLACK); // This changes the text color of the header

    // Remove the border of the table header
    header.setBorder(BorderFactory.createEmptyBorder());

    // Remove cell borders
    Orders.setShowGrid(false);

    // Add the table to a JScrollPane and add it to the form
    JScrollPane scrollPane = new JScrollPane(Orders);
    scrollPane.setBounds(10, 100, 800, 350); 
    orderMenu.add(scrollPane);
    
    // Refresh the GUI to apply the changes
    SwingUtilities.updateComponentTreeUI(this);
}
    RestaurantDatabase db = new RestaurantDatabase();
 public void getSQL() {
    List<Map<String, String>> result;
    // This is to store the SQL query
    String sql;

    

    // SQL query to get all orders with currentState = "pending", and their corresponding food item name, ordered quantity, table ID, order date, order time, and current state
  sql = "SELECT o.orderId, o.TableId, o.orderdDate, o.orderdTime, o.currentState, o.additionalInfo, f.foodName, orderFood.quntity, orderFood.orderFoodId, orderFood.state " +
      "FROM `order` o " +
      "JOIN `orderFood` ON o.orderId = `orderFood`.orderId " +
      "JOIN food f ON `orderFood`.foodId = f.foodId " +
      "WHERE o.currentState = 'pending'"
          + "ORDER BY o.orderdTime DESC;";

    result = db.executeQuery(sql);
    System.out.println(result);

//    try {
//        db.getConnection().close();
//    } catch (Exception e) {
//        System.out.println("Error while closing the connection: " + e.getMessage());
//    }

    // Data will be putten int the table by itarating the SQL result hashmap.
    for (Map<String, String> row : result) {
        OrdersModel.addRow(new Object[] {
            row.get("orderFoodId"),
            row.get("orderId"),
            row.get("TableId"),
            row.get("foodName"),
            row.get("quntity"),
            row.get("additionalInfo"),
            row.get("orderdTime"),
            row.get("state")
            
        });
    }
    
    // Clear the combo box
cmbOrderId.removeAllItems();
cmbFullOrderID.removeAllItems();

// Add each orderFoodId to the combo box
for (Map<String, String> row : result) {
    cmbOrderId.addItem(row.get("orderFoodId"));
}

//To prevent duplications in combo box
Set<String> items = new HashSet<>();
for (Map<String, String> row : result) {
    String orderId = row.get("orderId");
    if (!items.contains(orderId)) {
        cmbFullOrderID.addItem(orderId);
        items.add(orderId);
    }
}


}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void resetTable(){
                DefaultTableModel model = (DefaultTableModel) Orders.getModel();
        model.setRowCount(0);

        getSQL();
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sideBar = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        orderMenu = new javax.swing.JPanel();
        cmbOrderId = new javax.swing.JComboBox<>();
        btnReset = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmbFullOrderID = new javax.swing.JComboBox<>();
        cmbItemStates = new javax.swing.JComboBox<>();
        cmbOrderStates = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1100, 680));
        setResizable(false);
        getContentPane().setLayout(null);

        sideBar.setBackground(new java.awt.Color(241, 242, 247));
        sideBar.setForeground(new java.awt.Color(241, 242, 247));
        sideBar.setLayout(null);

        jButton1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButton1.setText("Dashboard");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        sideBar.add(jButton1);
        jButton1.setBounds(30, 110, 190, 40);

        getContentPane().add(sideBar);
        sideBar.setBounds(-10, -10, 250, 670);

        orderMenu.setBackground(new java.awt.Color(255, 255, 255));
        orderMenu.setForeground(new java.awt.Color(255, 255, 255));
        orderMenu.setLayout(null);

        cmbOrderId.setBackground(new java.awt.Color(241, 242, 247));
        cmbOrderId.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cmbOrderId.setForeground(new java.awt.Color(0, 0, 0));
        cmbOrderId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item ID" }));
        cmbOrderId.setBorder(null);
        cmbOrderId.setFocusable(false);
        cmbOrderId.setRequestFocusEnabled(false);
        cmbOrderId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrderIdActionPerformed(evt);
            }
        });
        orderMenu.add(cmbOrderId);
        cmbOrderId.setBounds(60, 510, 200, 40);

        btnReset.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        btnReset.setText("RESET");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        orderMenu.add(btnReset);
        btnReset.setBounds(640, 40, 175, 40);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Orders");
        orderMenu.add(jLabel1);
        jLabel1.setBounds(20, 20, 130, 59);

        cmbFullOrderID.setBackground(new java.awt.Color(241, 242, 247));
        cmbFullOrderID.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cmbFullOrderID.setForeground(new java.awt.Color(0, 0, 0));
        cmbFullOrderID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Order ID" }));
        cmbFullOrderID.setBorder(null);
        cmbFullOrderID.setFocusable(false);
        cmbFullOrderID.setRequestFocusEnabled(false);
        cmbFullOrderID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFullOrderIDActionPerformed(evt);
            }
        });
        orderMenu.add(cmbFullOrderID);
        cmbFullOrderID.setBounds(60, 570, 200, 40);

        cmbItemStates.setBackground(new java.awt.Color(241, 242, 247));
        cmbItemStates.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cmbItemStates.setForeground(new java.awt.Color(0, 0, 0));
        cmbItemStates.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Accepted", "Preparing", "Cooking", "Packaging", "Serving", "Cancelled", " " }));
        cmbItemStates.setBorder(null);
        cmbItemStates.setFocusable(false);
        cmbItemStates.setRequestFocusEnabled(false);
        cmbItemStates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbItemStatesActionPerformed(evt);
            }
        });
        orderMenu.add(cmbItemStates);
        cmbItemStates.setBounds(300, 510, 510, 40);

        cmbOrderStates.setBackground(new java.awt.Color(241, 242, 247));
        cmbOrderStates.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cmbOrderStates.setForeground(new java.awt.Color(0, 0, 0));
        cmbOrderStates.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Finish order", "Cancel order" }));
        cmbOrderStates.setBorder(null);
        cmbOrderStates.setFocusable(false);
        cmbOrderStates.setRequestFocusEnabled(false);
        cmbOrderStates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrderStatesActionPerformed(evt);
            }
        });
        orderMenu.add(cmbOrderStates);
        cmbOrderStates.setBounds(300, 570, 510, 40);

        getContentPane().add(orderMenu);
        orderMenu.setBounds(240, 0, 840, 640);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbOrderIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrderIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbOrderIdActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        resetTable();
    }//GEN-LAST:event_btnResetActionPerformed

    private void cmbFullOrderIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFullOrderIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbFullOrderIDActionPerformed

    private void cmbItemStatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbItemStatesActionPerformed
        String selectedOrderFoodId = (String) cmbOrderId.getSelectedItem();
        String state = (String)cmbItemStates.getSelectedItem();
        String sql = "UPDATE orderFood SET state = '"+state+"' WHERE orderFoodId = "+selectedOrderFoodId+"";     
        db.executeQuery(sql);
        
        resetTable();
    }//GEN-LAST:event_cmbItemStatesActionPerformed

    private void cmbOrderStatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrderStatesActionPerformed
                String selectedOrderFoodId = (String) cmbFullOrderID.getSelectedItem();
        String state = (String)cmbOrderStates.getSelectedItem();
        String sql = "UPDATE `order` SET currentState = '"+state+"' WHERE orderId = "+selectedOrderFoodId+"";
     
        db.executeQuery(sql);
        
        resetTable();
    }//GEN-LAST:event_cmbOrderStatesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderDetails().setVisible(true);
            }
            
        });
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JComboBox<String> cmbFullOrderID;
    private javax.swing.JComboBox<String> cmbItemStates;
    private javax.swing.JComboBox<String> cmbOrderId;
    private javax.swing.JComboBox<String> cmbOrderStates;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel orderMenu;
    private javax.swing.JPanel sideBar;
    // End of variables declaration//GEN-END:variables
}
